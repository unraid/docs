"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2797],{7166:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>l,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"embedding","title":"Embedding Unraid Docs","description":"Use the following guidance when loading the Unraid documentation inside an iframe-driven experience. Query parameters cover the most common configuration options, and an optional postMessage API is available for hosts that need dynamic coordination.","source":"@site/docs/embedding.md","sourceDirName":".","slug":"/embedding","permalink":"/docs/pr-preview/pr-330/embedding","draft":false,"unlisted":false,"editUrl":"https://github.com/unraid/docs/edit/feat/query-param-iframe-nav/docs/embedding.md","tags":[],"version":"current","frontMatter":{},"sidebar":"unraidSidebar","previous":{"title":"Glossary","permalink":"/docs/pr-preview/pr-330/glossary"}}');var r=n(4848),i=n(8453);const d={},a="Embedding Unraid Docs",o={},c=[{value:"Required Query Parameters",id:"required-query-parameters",level:2},{value:"Optional Query Parameters",id:"optional-query-parameters",level:2},{value:"Session Storage Keys",id:"session-storage-keys",level:2},{value:"Example URL Builders",id:"example-url-builders",level:2},{value:"Recommended Host Flow",id:"recommended-host-flow",level:2},{value:"Messaging API",id:"messaging-api",level:2},{value:"Messages emitted from the iframe",id:"messages-emitted-from-the-iframe",level:3},{value:"Commands accepted by the iframe",id:"commands-accepted-by-the-iframe",level:3},{value:"Legacy compatibility",id:"legacy-compatibility",level:3}];function h(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"embedding-unraid-docs",children:"Embedding Unraid Docs"})}),"\n",(0,r.jsxs)(s.p,{children:["Use the following guidance when loading the Unraid documentation inside an iframe-driven experience. Query parameters cover the most common configuration options, and an optional ",(0,r.jsx)(s.code,{children:"postMessage"})," API is available for hosts that need dynamic coordination."]}),"\n",(0,r.jsx)(s.h2,{id:"required-query-parameters",children:"Required Query Parameters"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"embed=1"})," \u2014 Opts the page into iframe-specific presentation tweaks (hides the global navbar, footer, etc.). Include this on every embedded URL."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"optional-query-parameters",children:"Optional Query Parameters"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"theme=<light|dark>"})," \u2014 Forces the initial Docs theme. The value is persisted for the iframe session so reloads stay consistent."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"entry=<path>"})," \u2014 Marks the logical entry point for the iframe session. Supply an absolute docs path (e.g. ",(0,r.jsx)(s.code,{children:"/unraid-os/..."}),") or a full docs URL; the embedded UI shows a floating back icon that returns visitors to this path and hides itself while you remain on it. Defaults to the first loaded URL if omitted."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"sidebar=1"})," \u2014 Re-enables the documentation sidebar and table of contents, which are hidden by default in embedded mode."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"session-storage-keys",children:"Session Storage Keys"}),"\n",(0,r.jsxs)(s.p,{children:["The iframe experience uses ",(0,r.jsx)(s.code,{children:"window.sessionStorage"})," to remember state while a browser tab stays open. Host applications normally do not need to interact with these keys, but they are listed here for completeness."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Key"}),(0,r.jsx)(s.th,{children:"Purpose"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"unraidDocsIframe"})}),(0,r.jsx)(s.td,{children:"Tracks whether the current session originated inside an iframe."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"unraidDocsTheme"})}),(0,r.jsx)(s.td,{children:"Stores the last used Docs theme so reloads stay consistent."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"unraidDocsIframeEntry"})}),(0,r.jsx)(s.td,{children:"Holds the iframe entry path for the fallback back button."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"unraidDocsIframeSidebar"})}),(0,r.jsx)(s.td,{children:"Marks whether the sidebar was explicitly enabled."})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"A host can clear these keys to reset the embedded state before opening a new iframe session."}),"\n",(0,r.jsx)(s.h2,{id:"example-url-builders",children:"Example URL Builders"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'function buildDocsUrl(path, { theme, entry, sidebar } = {}) {\n  const url = new URL(path, "https://docs.unraid.net");\n  url.searchParams.set("embed", "1");\n\n  if (theme === "light" || theme === "dark") {\n    url.searchParams.set("theme", theme);\n  }\n\n  if (entry) {\n    url.searchParams.set("entry", entry);\n  }\n\n  if (sidebar) {\n    url.searchParams.set("sidebar", "1");\n  }\n\n  return url.toString();\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"recommended-host-flow",children:"Recommended Host Flow"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["Decide which route should serve as the iframe entry point and supply it via ",(0,r.jsx)(s.code,{children:"entry"})," when loading the iframe."]}),"\n",(0,r.jsx)(s.li,{children:"Pass the current host theme if you want the Docs theme to match immediately."}),"\n",(0,r.jsxs)(s.li,{children:["Toggle ",(0,r.jsx)(s.code,{children:"sidebar=1"})," only when the host layout can accommodate the wider viewport required for the sidebar."]}),"\n",(0,r.jsx)(s.li,{children:"When tearing down an iframe session, optionally clear the session-storage keys to remove residual state before launching a new session in the same tab."}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"messaging-api",children:"Messaging API"}),"\n",(0,r.jsxs)(s.p,{children:["The embedded docs surface a lightweight ",(0,r.jsx)(s.code,{children:"postMessage"})," API that reports readiness, navigation, and theme changes using structured message types. All messages share the shape ",(0,r.jsx)(s.code,{children:'{ source: "unraid-docs", type: string, ...payload }'})," so hosts can quickly filter for docs-specific traffic."]}),"\n",(0,r.jsx)(s.h3,{id:"messages-emitted-from-the-iframe",children:"Messages emitted from the iframe"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Payload"}),(0,r.jsx)(s.th,{children:"Purpose"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"unraid-docs:ready"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:'{ theme: "light" | "dark" }'})}),(0,r.jsx)(s.td,{children:"Fired once the iframe has applied its starting theme."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"unraid-docs:theme-change"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:'{ theme: "light" | "dark" }'})}),(0,r.jsx)(s.td,{children:"Fired whenever the iframe theme changes (including the initial emission)."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"unraid-docs:navigation"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"{ pathname, search, hash, url }"})}),(0,r.jsx)(s.td,{children:"Fired whenever in-iframe navigation occurs."})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"commands-accepted-by-the-iframe",children:"Commands accepted by the iframe"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Payload"}),(0,r.jsx)(s.th,{children:"Purpose"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"unraid-docs:set-theme"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:'{ theme: "light" | "dark" }'})}),(0,r.jsx)(s.td,{children:"Requests a theme change without requiring a reload."})]})})]}),"\n",(0,r.jsx)(s.p,{children:"Example host handler:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"window.addEventListener('message', (event) => {\n  const data = event.data;\n  if (!data || data.source !== 'unraid-docs') {\n    return;\n  }\n\n  if (data.type === 'unraid-docs:theme-change') {\n    console.log('Docs theme changed to', data.theme);\n  }\n});\n\nfunction setIframeTheme(frame, theme) {\n  if (!frame.contentWindow) {\n    return;\n  }\n\n  frame.contentWindow.postMessage({\n    source: 'unraid-docs',\n    type: 'unraid-docs:set-theme',\n    theme,\n  }, '*');\n}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Refer to ",(0,r.jsx)(s.code,{children:"iframe-test.html"})," for a working example that exercises both outgoing and incoming messages."]}),"\n",(0,r.jsx)(s.h3,{id:"legacy-compatibility",children:"Legacy compatibility"}),"\n",(0,r.jsxs)(s.p,{children:["For backwards compatibility the iframe still listens for ",(0,r.jsx)(s.code,{children:'{ type: "theme-update", theme }'})," and continues to emit the historical ",(0,r.jsx)(s.code,{children:"theme-ready"})," and ",(0,r.jsx)(s.code,{children:"theme-changed"})," messages alongside the new message types. Hosts should migrate to the structured ",(0,r.jsx)(s.code,{children:"unraid-docs:*"})," contract because the legacy events will be removed in a future release. The example test page also demonstrates how to broadcast both message formats during the transition period."]})]})}function l(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>a});var t=n(6540);const r={},i=t.createContext(r);function d(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);