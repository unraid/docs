"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5137],{705:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"API/oidc-provider-setup","title":"OIDC Provider Setup","description":"Configure OIDC (OpenID Connect) providers for SSO authentication in Unraid API","source":"@site/docs/API/oidc-provider-setup.mdx","sourceDirName":"API","slug":"/API/oidc-provider-setup","permalink":"/docs/pr-preview/pr-327/API/oidc-provider-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/unraid/docs/edit/add-7-2-0-beta-3b/docs/API/oidc-provider-setup.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"OIDC Provider Setup","description":"Configure OIDC (OpenID Connect) providers for SSO authentication in Unraid API","sidebar_position":3},"sidebar":"unraidSidebar","previous":{"title":"Using the Unraid API","permalink":"/docs/pr-preview/pr-327/API/how-to-use-the-api"},"next":{"title":"CLI Reference","permalink":"/docs/pr-preview/pr-327/API/cli"}}');var s=n(4848),l=n(8453);const o={title:"OIDC Provider Setup",description:"Configure OIDC (OpenID Connect) providers for SSO authentication in Unraid API",sidebar_position:3},d="OIDC Provider Setup",c={},t=[{value:"\ud83d\ude80 Quick Start",id:"-quick-start",level:2},{value:"OIDC Providers Interface Overview",id:"oidc-providers-interface-overview",level:3},{value:"Understanding Authorization Modes",id:"understanding-authorization-modes",level:2},{value:"Simple Mode (Recommended)",id:"simple-mode-recommended",level:3},{value:"Authorization Rules",id:"authorization-rules",level:2},{value:"Simple Mode Examples",id:"simple-mode-examples",level:3},{value:"Allow Company Domain",id:"allow-company-domain",level:4},{value:"Allow Specific Users",id:"allow-specific-users",level:4},{value:"Authorization Rule Mode",id:"authorization-rule-mode",level:4},{value:"Email Domain with Verification (AND Mode)",id:"email-domain-with-verification-and-mode",level:4},{value:"Group-Based Access (OR Mode)",id:"group-based-access-or-mode",level:4},{value:"Multiple Domains",id:"multiple-domains",level:4},{value:"Complex Authorization (AND Mode)",id:"complex-authorization-and-mode",level:4},{value:"Provider Tabs",id:"provider-tabs",level:3},{value:"Authorization Mode Dropdown",id:"authorization-mode-dropdown",level:3},{value:"Simple Authorization Fields",id:"simple-authorization-fields",level:3},{value:"Advanced Authorization Fields",id:"advanced-authorization-fields",level:3},{value:"Additional Interface Elements",id:"additional-interface-elements",level:3},{value:"Required Redirect URI",id:"required-redirect-uri",level:3},{value:"Issuer URL Format",id:"issuer-url-format",level:3},{value:"\u2705 Testing Your Configuration",id:"-testing-your-configuration",level:2},{value:"\ud83d\udd27 Troubleshooting",id:"-troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"&quot;Provider not found&quot; error",id:"provider-not-found-error",level:4},{value:"&quot;Authorization failed&quot;",id:"authorization-failed",level:4},{value:"&quot;Invalid redirect URI&quot;",id:"invalid-redirect-uri",level:4},{value:"Cannot see login button",id:"cannot-see-login-button",level:4},{value:"Debug Mode",id:"debug-mode",level:3},{value:"\ud83d\udd10 Security Best Practices",id:"-security-best-practices",level:2},{value:"\ud83d\udca1 Need Help?",id:"-need-help",level:2},{value:"\ud83c\udfe2 Provider-Specific Setup",id:"-provider-specific-setup",level:2},{value:"Unraid.net Provider",id:"unraidnet-provider",level:3},{value:"Google",id:"google",level:3},{value:"Authelia",id:"authelia",level:3},{value:"Microsoft/Azure AD",id:"microsoftazure-ad",level:3},{value:"Keycloak",id:"keycloak",level:3},{value:"Authentik",id:"authentik",level:3},{value:"Okta",id:"okta",level:3}];function a(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components},{Details:r}=i;return r||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"oidc-provider-setup",children:"OIDC Provider Setup"})}),"\n",(0,s.jsx)(i.admonition,{title:"What is OIDC?",type:"info",children:(0,s.jsx)(i.p,{children:"OpenID Connect (OIDC) is an authentication protocol that allows users to sign in using their existing accounts from providers like Google, Microsoft, or your corporate identity provider. It enables Single Sign-On (SSO) for seamless and secure authentication."})}),"\n",(0,s.jsx)(i.p,{children:"This guide walks you through configuring OIDC (OpenID Connect) providers for SSO authentication in the Unraid API using the web interface."}),"\n",(0,s.jsx)(i.h2,{id:"-quick-start",children:"\ud83d\ude80 Quick Start"}),"\n",(0,s.jsxs)(r,{open:!0,children:[(0,s.jsx)("summary",{children:(0,s.jsx)("strong",{children:"Getting to OIDC Settings"})}),(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Navigate to your Unraid server's web interface"}),"\n",(0,s.jsxs)(i.li,{children:["Go to ",(0,s.jsx)(i.strong,{children:"Settings"})," \u2192 ",(0,s.jsx)(i.strong,{children:"Management Access"})," \u2192 ",(0,s.jsx)(i.strong,{children:"API"})," \u2192 ",(0,s.jsx)(i.strong,{children:"OIDC"})]}),"\n",(0,s.jsxs)(i.li,{children:["You'll see tabs for different providers - click the ",(0,s.jsx)(i.strong,{children:"+"})," button to add a new provider"]}),"\n"]})]}),"\n",(0,s.jsx)(i.h3,{id:"oidc-providers-interface-overview",children:"OIDC Providers Interface Overview"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.img,{alt:"Login Page with SSO Options",src:n(9061).A+"",width:"543",height:"641"}),"\n",(0,s.jsx)(i.em,{children:'Login page showing traditional login form with SSO options - "Login With Unraid.net" and "Sign in with Google" buttons'})]}),"\n",(0,s.jsx)(i.p,{children:"The interface includes:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Provider tabs"}),": Each configured provider (Unraid.net, Google, etc.) appears as a tab"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Add Provider button"}),": Click the ",(0,s.jsx)(i.strong,{children:"+"})," button to add new providers"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Authorization Mode dropdown"}),': Toggle between "simple" and "advanced" modes']}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Simple Authorization section"}),": Configure allowed email domains and specific addresses"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Add Item buttons"}),": Click to add multiple authorization rules"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"understanding-authorization-modes",children:"Understanding Authorization Modes"}),"\n",(0,s.jsx)(i.p,{children:"The interface provides two authorization modes:"}),"\n",(0,s.jsx)(i.h3,{id:"simple-mode-recommended",children:"Simple Mode (Recommended)"}),"\n",(0,s.jsx)(i.p,{children:"Simple mode is the easiest way to configure authorization. You can:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Allow specific email domains (e.g., @company.com)"}),"\n",(0,s.jsx)(i.li,{children:"Allow specific email addresses"}),"\n",(0,s.jsx)(i.li,{children:"Configure who can access your Unraid server with minimal setup"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"When to use Simple Mode:"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"You want to allow all users from your company domain"}),"\n",(0,s.jsx)(i.li,{children:"You have a small list of specific users"}),"\n",(0,s.jsx)(i.li,{children:"You're new to OIDC configuration"}),"\n"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("strong",{children:"Advanced Mode"})}),(0,s.jsx)(i.p,{children:"Advanced mode provides granular control using claim-based rules. You can:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Create complex authorization rules based on JWT claims"}),"\n",(0,s.jsx)(i.li,{children:"Use operators like equals, contains, endsWith, startsWith"}),"\n",(0,s.jsx)(i.li,{children:"Combine multiple conditions with OR/AND logic"}),"\n",(0,s.jsx)(i.li,{children:"Choose whether ANY rule must pass (OR mode) or ALL rules must pass (AND mode)"}),"\n"]}),(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"When to use Advanced Mode:"})}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"You need to check group memberships"}),"\n",(0,s.jsx)(i.li,{children:"You want to verify multiple claims (e.g., email domain AND verified status)"}),"\n",(0,s.jsx)(i.li,{children:"You have complex authorization requirements"}),"\n",(0,s.jsx)(i.li,{children:"You need fine-grained control over how rules are evaluated"}),"\n"]})]}),"\n",(0,s.jsx)(i.h2,{id:"authorization-rules",children:"Authorization Rules"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.img,{alt:"Authorization Rules Configuration",src:n(2254).A+"",width:"1162",height:"972"}),"\n",(0,s.jsx)(i.em,{children:"Advanced authorization rules showing JWT claim configuration with email endsWith operator for domain-based access control"})]}),"\n",(0,s.jsx)(i.h3,{id:"simple-mode-examples",children:"Simple Mode Examples"}),"\n",(0,s.jsx)(i.h4,{id:"allow-company-domain",children:"Allow Company Domain"}),"\n",(0,s.jsx)(i.p,{children:"In Simple Authorization:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Allowed Email Domains"}),": Enter ",(0,s.jsx)(i.code,{children:"company.com"})]}),"\n",(0,s.jsx)(i.li,{children:"This allows anyone with @company.com email"}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"allow-specific-users",children:"Allow Specific Users"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Specific Email Addresses"}),": Add individual emails"]}),"\n",(0,s.jsxs)(i.li,{children:["Click ",(0,s.jsx)(i.strong,{children:"Add Item"})," to add multiple addresses"]}),"\n"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("strong",{children:"Advanced Mode Examples"})}),(0,s.jsx)(i.h4,{id:"authorization-rule-mode",children:"Authorization Rule Mode"}),(0,s.jsx)(i.p,{children:"When using multiple rules, you can choose how they're evaluated:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"OR Mode"})," (default): User is authorized if ANY rule passes"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"AND Mode"}),": User is authorized only if ALL rules pass"]}),"\n"]}),(0,s.jsx)(i.h4,{id:"email-domain-with-verification-and-mode",children:"Email Domain with Verification (AND Mode)"}),(0,s.jsx)(i.p,{children:"To require both email domain AND verification:"}),(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Set ",(0,s.jsx)(i.strong,{children:"Authorization Rule Mode"})," to ",(0,s.jsx)(i.code,{children:"AND"})]}),"\n",(0,s.jsxs)(i.li,{children:["Add two rules:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Rule 1:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Claim"}),": ",(0,s.jsx)(i.code,{children:"email"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Operator"}),": ",(0,s.jsx)(i.code,{children:"endsWith"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Value"}),": ",(0,s.jsx)(i.code,{children:"@company.com"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Rule 2:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Claim"}),": ",(0,s.jsx)(i.code,{children:"email_verified"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Operator"}),": ",(0,s.jsx)(i.code,{children:"equals"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Value"}),": ",(0,s.jsx)(i.code,{children:"true"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsx)(i.p,{children:"This ensures users must have both a company email AND a verified email address."}),(0,s.jsx)(i.h4,{id:"group-based-access-or-mode",children:"Group-Based Access (OR Mode)"}),(0,s.jsx)(i.p,{children:"To allow access to multiple groups:"}),(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Set ",(0,s.jsx)(i.strong,{children:"Authorization Rule Mode"})," to ",(0,s.jsx)(i.code,{children:"OR"})," (default)"]}),"\n",(0,s.jsxs)(i.li,{children:["Add rules for each group:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Claim"}),": ",(0,s.jsx)(i.code,{children:"groups"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Operator"}),": ",(0,s.jsx)(i.code,{children:"contains"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Value"}),": ",(0,s.jsx)(i.code,{children:"admins"}),"\nOr add another rule:"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Claim"}),": ",(0,s.jsx)(i.code,{children:"groups"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Operator"}),": ",(0,s.jsx)(i.code,{children:"contains"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Value"}),": ",(0,s.jsx)(i.code,{children:"developers"})]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsxs)(i.p,{children:["Users in either ",(0,s.jsx)(i.code,{children:"admins"})," OR ",(0,s.jsx)(i.code,{children:"developers"})," group will be authorized."]}),(0,s.jsx)(i.h4,{id:"multiple-domains",children:"Multiple Domains"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Claim"}),": ",(0,s.jsx)(i.code,{children:"email"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Operator"}),": ",(0,s.jsx)(i.code,{children:"endsWith"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Values"}),": Add multiple domains (e.g., ",(0,s.jsx)(i.code,{children:"company.com"}),", ",(0,s.jsx)(i.code,{children:"subsidiary.com"}),")"]}),"\n"]}),(0,s.jsx)(i.h4,{id:"complex-authorization-and-mode",children:"Complex Authorization (AND Mode)"}),(0,s.jsx)(i.p,{children:"For strict security requiring multiple conditions:"}),(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Set ",(0,s.jsx)(i.strong,{children:"Authorization Rule Mode"})," to ",(0,s.jsx)(i.code,{children:"AND"})]}),"\n",(0,s.jsxs)(i.li,{children:["Add multiple rules that ALL must pass:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Email must be from company domain"}),"\n",(0,s.jsx)(i.li,{children:"Email must be verified"}),"\n",(0,s.jsx)(i.li,{children:"User must be in specific group"}),"\n",(0,s.jsx)(i.li,{children:"Account must have 2FA enabled (if claim available)"}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("strong",{children:"Configuration Interface Details"})}),(0,s.jsx)(i.h3,{id:"provider-tabs",children:"Provider Tabs"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Each configured provider appears as a tab at the top"}),"\n",(0,s.jsx)(i.li,{children:"Click a tab to switch between provider configurations"}),"\n",(0,s.jsxs)(i.li,{children:["The ",(0,s.jsx)(i.strong,{children:"+"})," button on the right adds a new provider"]}),"\n"]}),(0,s.jsx)(i.h3,{id:"authorization-mode-dropdown",children:"Authorization Mode Dropdown"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"simple"}),": Best for email-based authorization (recommended for most users)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"advanced"}),": For complex claim-based rules using JWT claims"]}),"\n"]}),(0,s.jsx)(i.h3,{id:"simple-authorization-fields",children:"Simple Authorization Fields"}),(0,s.jsx)(i.p,{children:'When "simple" mode is selected, you\'ll see:'}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Allowed Email Domains"}),": Enter domains without @ (e.g., ",(0,s.jsx)(i.code,{children:"company.com"}),")","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:'Helper text: "Users with emails ending in these domains can login"'}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Specific Email Addresses"}),": Add individual email addresses","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:'Helper text: "Only these exact email addresses can login"'}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Add Item"})," buttons to add multiple entries"]}),"\n"]}),(0,s.jsx)(i.h3,{id:"advanced-authorization-fields",children:"Advanced Authorization Fields"}),(0,s.jsx)(i.p,{children:'When "advanced" mode is selected, you\'ll see:'}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Authorization Rule Mode"}),": Choose ",(0,s.jsx)(i.code,{children:"OR"})," (any rule passes) or ",(0,s.jsx)(i.code,{children:"AND"})," (all rules must pass)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Authorization Rules"}),": Add multiple claim-based rules"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"For each rule"}),":","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Claim"}),": The JWT claim to check"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Operator"}),": How to compare (equals, contains, endsWith, startsWith)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Value"}),": What to match against"]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsx)(i.h3,{id:"additional-interface-elements",children:"Additional Interface Elements"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Enable Developer Sandbox"}),": Toggle to enable GraphQL sandbox at ",(0,s.jsx)(i.code,{children:"/graphql"})]}),"\n",(0,s.jsx)(i.li,{children:"The interface uses a dark theme for better visibility"}),"\n",(0,s.jsx)(i.li,{children:"Field validation indicators help ensure correct configuration"}),"\n"]})]}),"\n",(0,s.jsx)(i.h3,{id:"required-redirect-uri",children:"Required Redirect URI"}),"\n",(0,s.jsx)(i.admonition,{title:"Important Configuration",type:"caution",children:(0,s.jsx)(i.p,{children:"All providers must be configured with this exact redirect URI format:"})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"http://YOUR_UNRAID_IP/graphql/api/auth/oidc/callback\n"})}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsxs)(i.p,{children:["Replace ",(0,s.jsx)(i.code,{children:"YOUR_UNRAID_IP"})," with your actual server IP address (e.g., ",(0,s.jsx)(i.code,{children:"192.168.1.100"})," or ",(0,s.jsx)(i.code,{children:"tower.local"}),")."]})}),"\n",(0,s.jsx)(i.h3,{id:"issuer-url-format",children:"Issuer URL Format"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.strong,{children:"Issuer URL"})," field accepts both formats, but ",(0,s.jsx)(i.strong,{children:"base URL is strongly recommended"})," for security:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Base URL"})," (recommended): ",(0,s.jsx)(i.code,{children:"https://accounts.google.com"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Full discovery URL"}),": ",(0,s.jsx)(i.code,{children:"https://accounts.google.com/.well-known/openid-configuration"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"\u26a0\ufe0f Security Note"}),": Always use the base URL format when possible. The system automatically appends ",(0,s.jsx)(i.code,{children:"/.well-known/openid-configuration"})," for OIDC discovery. Using the full discovery URL directly disables important issuer validation checks and is not recommended by the OpenID Connect specification."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Examples of correct base URLs:"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Google: ",(0,s.jsx)(i.code,{children:"https://accounts.google.com"})]}),"\n",(0,s.jsxs)(i.li,{children:["Microsoft/Azure: ",(0,s.jsx)(i.code,{children:"https://login.microsoftonline.com/YOUR_TENANT_ID/v2.0"})]}),"\n",(0,s.jsxs)(i.li,{children:["Keycloak: ",(0,s.jsx)(i.code,{children:"https://keycloak.example.com/realms/YOUR_REALM"})]}),"\n",(0,s.jsxs)(i.li,{children:["Authelia: ",(0,s.jsx)(i.code,{children:"https://auth.yourdomain.com"})]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"-testing-your-configuration",children:"\u2705 Testing Your Configuration"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.img,{alt:"Login Page with SSO Buttons",src:n(9061).A+"",width:"543",height:"641"}),"\n",(0,s.jsx)(i.em,{children:"Unraid login page displaying both traditional username/password authentication and SSO options with customized provider buttons"})]}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Save your provider configuration"}),"\n",(0,s.jsx)(i.li,{children:"Log out (if logged in)"}),"\n",(0,s.jsx)(i.li,{children:"Navigate to the login page"}),"\n",(0,s.jsx)(i.li,{children:"Your configured provider button should appear"}),"\n",(0,s.jsx)(i.li,{children:"Click to test the login flow"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"-troubleshooting",children:"\ud83d\udd27 Troubleshooting"}),"\n",(0,s.jsx)(i.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(i.h4,{id:"provider-not-found-error",children:'"Provider not found" error'}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Ensure the Issuer URL is correct"}),"\n",(0,s.jsx)(i.li,{children:"Check that the provider supports OIDC discovery (/.well-known/openid-configuration)"}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"authorization-failed",children:'"Authorization failed"'}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"In Simple Mode: Check email domains are entered correctly (without @)"}),"\n",(0,s.jsxs)(i.li,{children:["In Advanced Mode:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Verify claim names match exactly what your provider sends"}),"\n",(0,s.jsx)(i.li,{children:"Check if Authorization Rule Mode is set correctly (OR vs AND)"}),"\n",(0,s.jsx)(i.li,{children:"Ensure all required claims are present in the token"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Enable debug logging to see actual claims and rule evaluation"}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"invalid-redirect-uri",children:'"Invalid redirect URI"'}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Ensure the redirect URI in your provider matches exactly"}),"\n",(0,s.jsx)(i.li,{children:"Include the correct port if using a non-standard configuration"}),"\n",(0,s.jsx)(i.li,{children:"Verify the redirect URI protocol matches your server's configuration (HTTP or HTTPS)"}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"cannot-see-login-button",children:"Cannot see login button"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Check that at least one authorization rule is configured"}),"\n",(0,s.jsx)(i.li,{children:"Verify the provider is enabled/saved"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"debug-mode",children:"Debug Mode"}),"\n",(0,s.jsx)(i.p,{children:"To troubleshoot issues:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Enable debug logging:"}),"\n"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"LOG_LEVEL=debug unraid-api start --debug\n"})}),"\n",(0,s.jsxs)(i.ol,{start:"2",children:["\n",(0,s.jsx)(i.li,{children:"Check logs for:"}),"\n"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Received claims from provider"}),"\n",(0,s.jsx)(i.li,{children:"Authorization rule evaluation"}),"\n",(0,s.jsx)(i.li,{children:"Token validation errors"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"-security-best-practices",children:"\ud83d\udd10 Security Best Practices"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Use Simple Mode for authorization"})," - Prevents overly accepting configurations and reduces misconfiguration risks"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Be specific with authorization"})," - Don't use overly broad rules"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Rotate secrets regularly"})," - Update client secrets periodically"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Test thoroughly"})," - Verify only intended users can access"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"-need-help",children:"\ud83d\udca1 Need Help?"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Check provider's OIDC documentation"}),"\n",(0,s.jsx)(i.li,{children:"Review Unraid API logs for detailed error messages"}),"\n",(0,s.jsx)(i.li,{children:"Ensure your provider supports standard OIDC discovery"}),"\n",(0,s.jsx)(i.li,{children:"Verify network connectivity between Unraid and provider"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"-provider-specific-setup",children:"\ud83c\udfe2 Provider-Specific Setup"}),"\n",(0,s.jsx)(i.h3,{id:"unraidnet-provider",children:"Unraid.net Provider"}),"\n",(0,s.jsx)(i.p,{children:"The Unraid.net provider is built-in and pre-configured. You only need to configure authorization rules in the interface."}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Configuration:"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Issuer URL"}),": Pre-configured (built-in provider)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client ID/Secret"}),": Pre-configured (built-in provider)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Redirect URI"}),": ",(0,s.jsx)(i.code,{children:"http://YOUR_UNRAID_IP/graphql/api/auth/oidc/callback"})]}),"\n"]}),"\n",(0,s.jsx)(i.admonition,{title:"Redirect URI Protocol",type:"tip",children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Match the protocol to your server setup:"})," Use ",(0,s.jsx)(i.code,{children:"http://"})," if accessing your Unraid server without SSL/TLS (typical for local network access). Use ",(0,s.jsx)(i.code,{children:"https://"})," if you've configured SSL/TLS on your server. Some OIDC providers (like Google) require HTTPS and won't accept HTTP redirect URIs."]})}),"\n",(0,s.jsx)(i.p,{children:"Configure authorization rules using Simple Mode (allowed email domains/addresses) or Advanced Mode for complex requirements."}),"\n",(0,s.jsx)(i.h3,{id:"google",children:"Google"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("strong",{children:"\ud83d\udccb Setup Steps"})}),(0,s.jsxs)(i.p,{children:["Set up OAuth 2.0 credentials in ",(0,s.jsx)(i.a,{href:"https://console.cloud.google.com/",children:"Google Cloud Console"}),":"]}),(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Go to ",(0,s.jsx)(i.strong,{children:"APIs & Services"})," \u2192 ",(0,s.jsx)(i.strong,{children:"Credentials"})]}),"\n",(0,s.jsxs)(i.li,{children:["Click ",(0,s.jsx)(i.strong,{children:"Create Credentials"})," \u2192 ",(0,s.jsx)(i.strong,{children:"OAuth client ID"})]}),"\n",(0,s.jsxs)(i.li,{children:["Choose ",(0,s.jsx)(i.strong,{children:"Web application"})," as the application type"]}),"\n",(0,s.jsxs)(i.li,{children:["Add your redirect URI to ",(0,s.jsx)(i.strong,{children:"Authorized redirect URIs"})]}),"\n",(0,s.jsx)(i.li,{children:"Configure the OAuth consent screen if prompted"}),"\n"]})]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Configuration:"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Issuer URL"}),": ",(0,s.jsx)(i.code,{children:"https://accounts.google.com"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client ID/Secret"}),": From your OAuth 2.0 client credentials"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Required Scopes"}),": ",(0,s.jsx)(i.code,{children:"openid"}),", ",(0,s.jsx)(i.code,{children:"profile"}),", ",(0,s.jsx)(i.code,{children:"email"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Redirect URI"}),": ",(0,s.jsx)(i.code,{children:"http://YOUR_UNRAID_IP/graphql/api/auth/oidc/callback"})]}),"\n"]}),"\n",(0,s.jsxs)(i.admonition,{title:"Google Domain Requirements",type:"warning",children:[(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Google requires valid domain names for OAuth redirect URIs."})," Local IP addresses and ",(0,s.jsx)(i.code,{children:".local"})," domains are not accepted. To use Google OAuth with your Unraid server, you'll need:"]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Option 1: Reverse Proxy"})," - Set up a reverse proxy (like NGINX Proxy Manager or Traefik) with a valid domain name pointing to your Unraid API"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Option 2: Tailscale"})," - Use Tailscale to get a valid ",(0,s.jsx)(i.code,{children:"*.ts.net"})," domain that Google will accept"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Option 3: Dynamic DNS"})," - Use a DDNS service to get a public domain name for your server"]}),"\n"]}),(0,s.jsx)(i.p,{children:"Remember to update your redirect URI in both Google Cloud Console and your Unraid OIDC configuration to use the valid domain."})]}),"\n",(0,s.jsxs)(i.p,{children:["For Google Workspace domains, use Advanced Mode with the ",(0,s.jsx)(i.code,{children:"hd"})," claim to restrict access to your organization's domain."]}),"\n",(0,s.jsx)(i.h3,{id:"authelia",children:"Authelia"}),"\n",(0,s.jsxs)(i.p,{children:["Configure OIDC client in your Authelia ",(0,s.jsx)(i.code,{children:"configuration.yml"})," with client ID ",(0,s.jsx)(i.code,{children:"unraid-api"})," and generate a hashed secret using the Authelia hash-password command."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Configuration:"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Issuer URL"}),": ",(0,s.jsx)(i.code,{children:"https://auth.yourdomain.com"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client ID"}),": ",(0,s.jsx)(i.code,{children:"unraid-api"})," (or as configured in Authelia)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client Secret"}),": Your unhashed secret"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Required Scopes"}),": ",(0,s.jsx)(i.code,{children:"openid"}),", ",(0,s.jsx)(i.code,{children:"profile"}),", ",(0,s.jsx)(i.code,{children:"email"}),", ",(0,s.jsx)(i.code,{children:"groups"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Redirect URI"}),": ",(0,s.jsx)(i.code,{children:"http://YOUR_UNRAID_IP/graphql/api/auth/oidc/callback"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Use Advanced Mode with ",(0,s.jsx)(i.code,{children:"groups"})," claim for group-based authorization."]}),"\n",(0,s.jsx)(i.h3,{id:"microsoftazure-ad",children:"Microsoft/Azure AD"}),"\n",(0,s.jsxs)(i.p,{children:["Register a new app in ",(0,s.jsx)(i.a,{href:"https://portal.azure.com/",children:"Azure Portal"})," under Azure Active Directory \u2192 App registrations. Note the Application ID, create a client secret, and note your tenant ID."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Configuration:"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Issuer URL"}),": ",(0,s.jsx)(i.code,{children:"https://login.microsoftonline.com/YOUR_TENANT_ID/v2.0"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client ID"}),": Your Application (client) ID"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client Secret"}),": Generated client secret"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Required Scopes"}),": ",(0,s.jsx)(i.code,{children:"openid"}),", ",(0,s.jsx)(i.code,{children:"profile"}),", ",(0,s.jsx)(i.code,{children:"email"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Redirect URI"}),": ",(0,s.jsx)(i.code,{children:"http://YOUR_UNRAID_IP/graphql/api/auth/oidc/callback"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Authorization rules can be configured in the interface using email domains or advanced claims."}),"\n",(0,s.jsx)(i.h3,{id:"keycloak",children:"Keycloak"}),"\n",(0,s.jsxs)(i.p,{children:["Create a new confidential client in Keycloak Admin Console with ",(0,s.jsx)(i.code,{children:"openid-connect"})," protocol and copy the client secret from the Credentials tab."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Configuration:"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Issuer URL"}),": ",(0,s.jsx)(i.code,{children:"https://keycloak.example.com/realms/YOUR_REALM"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client ID"}),": ",(0,s.jsx)(i.code,{children:"unraid-api"})," (or as configured in Keycloak)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client Secret"}),": From Keycloak Credentials tab"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Required Scopes"}),": ",(0,s.jsx)(i.code,{children:"openid"}),", ",(0,s.jsx)(i.code,{children:"profile"}),", ",(0,s.jsx)(i.code,{children:"email"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Redirect URI"}),": ",(0,s.jsx)(i.code,{children:"http://YOUR_UNRAID_IP/graphql/api/auth/oidc/callback"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["For role-based authorization, use Advanced Mode with ",(0,s.jsx)(i.code,{children:"realm_access.roles"})," or ",(0,s.jsx)(i.code,{children:"resource_access"})," claims."]}),"\n",(0,s.jsx)(i.h3,{id:"authentik",children:"Authentik"}),"\n",(0,s.jsx)(i.p,{children:"Create a new OAuth2/OpenID Provider in Authentik, then create an Application and link it to the provider."}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Configuration:"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Issuer URL"}),": ",(0,s.jsx)(i.code,{children:"https://authentik.example.com/application/o/<application_slug>/"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client ID"}),": From Authentik provider configuration"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client Secret"}),": From Authentik provider configuration"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Required Scopes"}),": ",(0,s.jsx)(i.code,{children:"openid"}),", ",(0,s.jsx)(i.code,{children:"profile"}),", ",(0,s.jsx)(i.code,{children:"email"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Redirect URI"}),": ",(0,s.jsx)(i.code,{children:"http://YOUR_UNRAID_IP/graphql/api/auth/oidc/callback"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Authorization rules can be configured in the interface."}),"\n",(0,s.jsx)(i.h3,{id:"okta",children:"Okta"}),"\n",(0,s.jsx)(i.p,{children:"Create a new OIDC Web Application in Okta Admin Console and assign appropriate users or groups."}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Configuration:"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Issuer URL"}),": ",(0,s.jsx)(i.code,{children:"https://YOUR_DOMAIN.okta.com"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client ID"}),": From Okta application configuration"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Client Secret"}),": From Okta application configuration"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Required Scopes"}),": ",(0,s.jsx)(i.code,{children:"openid"}),", ",(0,s.jsx)(i.code,{children:"profile"}),", ",(0,s.jsx)(i.code,{children:"email"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Redirect URI"}),": ",(0,s.jsx)(i.code,{children:"http://YOUR_UNRAID_IP/graphql/api/auth/oidc/callback"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Authorization rules can be configured in the interface using email domains or advanced claims."})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},2254:(e,i,n)=>{n.d(i,{A:()=>r});const r=n.p+"assets/images/advanced-rules-a1adb1d0ae0e59913d42cc0c8d30878c.png"},9061:(e,i,n)=>{n.d(i,{A:()=>r});const r=n.p+"assets/images/sso-with-options-1502ad3a5ea6131273cbb449f0848840.png"},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>d});var r=n(6540);const s={},l=r.createContext(s);function o(e){const i=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(l.Provider,{value:i},e.children)}}}]);