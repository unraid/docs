"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1426],{2746:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Developer/index","title":"Developer Guide","description":"Guide for creating and submitting apps and plugins to the Unraid Community Applications Store","source":"@site/docs/Developer/index.mdx","sourceDirName":"Developer","slug":"/Developer/","permalink":"/docs/pr-preview/pr-363/fr/Developer/","draft":false,"unlisted":false,"editUrl":"https://translate.unraid.net/unraid-docs/fr","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Developer Guide","description":"Guide for creating and submitting apps and plugins to the Unraid Community Applications Store","sidebar_position":1},"sidebar":"unraidSidebar","previous":{"title":"Flux d\'autorisation de cl\xe9 API","permalink":"/docs/pr-preview/pr-363/fr/API/api-key-app-developer-authorization-flow"},"next":{"title":"Docker Apps","permalink":"/docs/pr-preview/pr-363/fr/Developer/docker-apps"}}');var r=s(4848),t=s(8453),o=s(4078);const a={title:"Developer Guide",description:"Guide for creating and submitting apps and plugins to the Unraid Community Applications Store",sidebar_position:1},c=void 0,l={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"\ud83d\udcda Documentation Sections",id:"-documentation-sections",level:2},{value:"Update Process and Sync Frequency",id:"update-process-and-sync-frequency",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Policies and Moderation",id:"policies-and-moderation",level:2}];function p(e){const i={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"Community Applications (CA) is a plugin for Unraid that provides a curated catalog of Docker containers (apps) and plugins. This guide explains how developers can create, test, and submit their own apps and plugins for inclusion in CA. Submissions are moderated to ensure safety, compatibility, and a positive user experience."}),"\n",(0,r.jsx)(i.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Install the Community Applications plugin on your Unraid system via the ",(0,r.jsx)(i.strong,{children:"Plugins"})," tab in the Unraid web UI."]}),"\n",(0,r.jsx)(i.li,{children:"Create a GitHub account and enable two-factor authentication (2FA) on your repositories\u2014this is required for security."}),"\n",(0,r.jsx)(i.li,{children:"Create a support thread for your app or plugin on the Unraid forums (post in any relevant section; a moderator will move it to the appropriate forum, such as Docker Containers or Plugin Support)."}),"\n",(0,r.jsxs)(i.li,{children:["For Docker apps, enable ",(0,r.jsx)(i.strong,{children:"Docker Authoring Mode"})," in ",(0,r.jsx)(i.em,{children:(0,r.jsx)(i.strong,{children:"Settings \u2192 Docker"})})," (stop the Docker service first, enable Advanced View, toggle Authoring Mode, then restart the service)."]}),"\n",(0,r.jsxs)(i.li,{children:["Familiarize yourself with CA policies at ",(0,r.jsx)(i.a,{href:"https://forums.unraid.net/topic/87144-ca-application-policies/",children:"CA Application Policies"})," to avoid rejection or blacklisting."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"-documentation-sections",children:"\ud83d\udcda Documentation Sections"}),"\n",(0,r.jsxs)("div",{style:{display:"grid",gridTemplateColumns:"repeat(auto-fit, minmax(250px, 1fr))",gap:"1rem"},children:[(0,r.jsx)(o.A,{title:"Learn how to create & submit",icon:"docker",href:"./docker-apps",children:(0,r.jsx)(i.p,{children:"Docker applications"})}),(0,r.jsx)(o.A,{title:"Learn how to create & submit",icon:"plugin",href:"./plugins",children:(0,r.jsx)(i.p,{children:"Unraid plugins"})})]}),"\n",(0,r.jsx)(i.h2,{id:"update-process-and-sync-frequency",children:"Update Process and Sync Frequency"}),"\n",(0,r.jsxs)(i.p,{children:["CA maintains a centralized feed of approved apps and plugins, hosted at ",(0,r.jsx)(i.a,{href:"https://raw.githubusercontent.com/Squidly271/AppFeed/master/applicationFeed.json",children:"https://raw.githubusercontent.com/Squidly271/AppFeed/master/applicationFeed.json"}),". This feed is aggregated from developer GitHub repositories and updated by moderators."]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Sync Frequency"}),": CA checks and syncs with developer GitHub repositories approximately every 2 hours. Users can manually trigger a refresh in the CA interface via the ",(0,r.jsx)(i.strong,{children:"Refresh Apps"})," button (under the Apps tab) to pull the latest feed sooner."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Time for New Submissions to Appear"}),": After moderator approval (which can take from hours to days depending on review queue and any required fixes), the app or plugin typically becomes visible in the CA store within ~2 hours of feed update."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Time for Updates to Appear"}),": Once changes are pushed to your GitHub repository (e.g., XML updates, new versions), they propagate to the CA store within 2 hours during the next automated sync. If the update involves moderator review (e.g., significant changes to plugin code), expect additional delay for approval."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Local Caching"}),": Users' local CA instances cache the feed; manual refreshes or restarts may be needed to see updates immediately. In cases of issues (e.g., DNS or network problems), check diagnostics or forum support threads for troubleshooting."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"For plugins, new submissions or major updates trigger a manual notification and code review by moderators like @Squid, which may extend timelines beyond the automated sync."}),"\n",(0,r.jsx)(i.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Ports"}),": Reference container ports in WebUI (e.g., ",(0,r.jsx)(i.code,{children:"[PORT:8080]"}),") for dynamic mapping."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Volumes"}),": Avoid host paths; use container paths to let users configure."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Environment Variables"}),": Provide defaults and clear descriptions; mask passwords."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Icons and Descriptions"}),": Use reliable URLs for icons; write concise, informative descriptions with Markdown."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Compatibility"}),": Include ",(0,r.jsx)(i.code,{children:"<Requires>"})," for dependencies (e.g., hardware plugins)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Updates"}),": Set ",(0,r.jsx)(i.code,{children:"<TemplateURL>false</TemplateURL>"})," in Docker XML to prevent auto-overwrites."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Security"}),": No HTML tags, no extra bash commands, no affiliate links."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Testing"}),": Use Authoring Mode; check CA Statistics for errors."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Uniqueness"}),": Avoid duplicates in saturated categories (e.g., media servers) unless offering unique features."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"policies-and-moderation",children:"Policies and Moderation"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"All submissions must comply with CA policies: open-source preferred, no malicious code, 2FA required."}),"\n",(0,r.jsx)(i.li,{children:"Blacklisting occurs for violations (e.g., security issues, repository changes)."}),"\n",(0,r.jsx)(i.li,{children:"Appeals: PM @Squid; escalate to @SpencerJ if needed."}),"\n",(0,r.jsx)(i.li,{children:"Abandoned apps/plugins may be removed without notice."}),"\n",(0,r.jsxs)(i.li,{children:["For full details, see ",(0,r.jsx)(i.a,{href:"https://forums.unraid.net/topic/87144-ca-application-policies/",children:"CA Application Policies"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"This documentation follows Unraid's style guide for clarity and structure. Submit updates or corrections via the Unraid forums or GitHub pull requests to relevant repos."})]})}function u(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},4078:(e,i,s)=>{s.d(i,{A:()=>o});s(6540);var n=s(4164),r=s(4783),t=s(4848);const o=({className:e,style:i,children:s,shadow:o,href:a,title:c,icon:l})=>{const d=o?`item shadow--${o}`:"",p=(0,t.jsxs)("div",{className:(0,n.A)("card",e,d),style:i,children:[(c||l)&&(0,t.jsxs)("div",{className:"card__header",children:[l&&(0,t.jsx)("span",{className:`icon icon-${l}`}),c]}),s]});return a?(0,t.jsx)(r.A,{to:a,className:"card-link",children:p}):p}},8453:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>a});var n=s(6540);const r={},t=n.createContext(r);function o(e){const i=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);